Для предыдущего задания реализовать веб-сервис, принимающий данные формы в
формате JSON или XML. Для не авторизованного пользователя веб-сервис возвращает
логин и пароль созданного пользователя и адрес профиля нового пользователя. Для
авторизованных пользователей веб-сервис позволяет менять все ранее отправленные
данные, кроме логина и пароля. При реализации веб-сервиса валидация параметров и
логика работы полностью аналогичны предыдущему заданию.
Реализовать отправку формы в предыдущем задании c помощью JavaScript
(XMLHttpRequest или Fetch) через разработанный веб-сервис без перезагрузки
страницы, если в браузере включен JavaScript. В противном
случае форма отправляется как обычно.
За задание выставляется до 46 баллов:
- до 26 баллов: интеграция фронт-энд части, разработанной в ходе проекта по
дисциплине «Разработка пользовательского WEB интерфейса» в предыдущем семестре;
- до 5 баллов: корректная реализация веб-сервиса для сохранения новых данных
форм и изменения отправленных ранее данных при авторизации;
- до 5 баллов: корректная реализация с использованием JavaScript, включая
валидацию на клиенте и отображение ошибок при валидации на сервере, отправку
новых данных и отображение логина и пароля, авторизацию и редактирование
введенных ранее данных;
- до 5 баллов: фоллбек на корректно работающий вариант реализации предыдущей
задачи в случае если JavaScript в браузере отключен;
- до 5 баллов: реализация веб-сервиса с учетом принципов REST, единая точка
входа, использование методов POST для сохранения новых данных и PUT по
динамическому адресу для изменения ранее введенных данных; 
Проведите рефaкторинг кода и используйте учебный фреймворк для организации модулей или
разработайте свой фреймворк для сопоставления URL-страниц модулям, шаблонизации.
Код валидации и работы с базой данных для веб-сервиса и формы на бекэнде не
должен дублироваться. Обработчик JavaScript назначайте на форму динамически при
отображении страницы чтобы изменить поведение формы, в случае если в браузере
включен JavaScript.
